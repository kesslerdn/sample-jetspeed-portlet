<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at
  
  http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">

  <!-- Application Server Manager for Tomcat. Comment out for others like JBoss
    Provides hooks into the application server to help us deploy portlet applications
    as web application into that server.  This manager is for Tomcat >= 5.5
  -->

  <bean id="org.apache.jetspeed.tools.pamanager.servletcontainer.ApplicationServerManager"
    class="org.apache.jetspeed.tools.pamanager.servletcontainer.TomcatManager" init-method="start"
    destroy-method="stop">
    <meta key="j2:cat" value="default" />
    <constructor-arg index="0">
      <value>${application.server.host}</value>
    </constructor-arg>
    <constructor-arg index="1">
      <value>${application.server.port}</value>
    </constructor-arg>
    <constructor-arg index="2">
      <value>${application.server.manager.name}</value>
    </constructor-arg>
    <constructor-arg index="3">
      <value>${application.server.manager.password}</value>
    </constructor-arg>
  </bean>

  <bean id="deployFactory" class="org.apache.jetspeed.tools.deploy.JetspeedDeployFactory">
    <meta key="j2:cat" value="default" />
  </bean>
  
  <bean id="org.apache.jetspeed.descriptor.JetspeedDescriptorService"
        class="org.apache.jetspeed.descriptor.JetspeedDescriptorServiceImpl">
      <meta key="j2:cat" value="default"/>
      <constructor-arg><bean class="org.apache.pluto.container.impl.PortletAppDescriptorServiceImpl"/></constructor-arg>
  </bean>
  
  <bean id="org.apache.jetspeed.tools.pamanager.PortletApplicationManager" class="org.apache.jetspeed.tools.pamanager.PortletApplicationManager" init-method="start"
    destroy-method="stop">
    <meta key="j2:cat" value="default" />
    <constructor-arg>
      <ref bean="portletFactory" />
    </constructor-arg>
    <constructor-arg>
      <ref bean="org.apache.jetspeed.components.portletregistry.PortletRegistry" />
    </constructor-arg>
    <constructor-arg>
      <ref bean="org.apache.jetspeed.security.PermissionManager" />
    </constructor-arg>
    <constructor-arg>
      <ref bean="org.apache.jetspeed.search.SearchEngine" />
    </constructor-arg>
    <constructor-arg>
      <ref bean="org.apache.jetspeed.security.RoleManager" />
    </constructor-arg>
    <!-- role principals to assign a default permission(s) during deployment of a Portlet Application -->
    <constructor-arg>
      <list>
        <value>user</value>
      </list>
    </constructor-arg>
    <constructor-arg>
      <ref bean="org.apache.jetspeed.cluster.NodeManager" />
    </constructor-arg>

    <!--  application root -->
    <constructor-arg>
      <value>${applicationRoot}</value>
    </constructor-arg>

    <constructor-arg><ref bean="org.apache.jetspeed.descriptor.JetspeedDescriptorService"/></constructor-arg>

    <!-- optional configuration for automatic creation of not yet existing roles as defined in the deployed web.xml:
      <property name="autoCreateRoles"><value>true</value></property>
    -->
    <!-- optional descriptor change monitor check interval in seconds (0: disabled, default: 10):
      <property name="descriptorChangeMonitorInterval"><value>10</value></property>
    -->
    <!-- optional max PA start retries in case of an error registering ths PA (0: do not retry, default: 10):
      this was introduced because of DB constraint validation errors in clustered environments
      see https://issues.apache.org/jira/browse/JS2-666
      <property name="maxRetriedStarts"><value>10</value></property>
    -->
  </bean>

   <bean id="PAM" parent="baseTransactionProxy">
     <meta key="j2:cat" value="default" />
        <property name="proxyInterfaces">
            <value>org.apache.jetspeed.tools.pamanager.PortletApplicationManagement</value>
        </property>

        <property name="target">
            <ref bean="org.apache.jetspeed.tools.pamanager.PortletApplicationManager" />
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="try*">PROPAGATION_REQUIRED,-org.apache.jetspeed.components.portletregistry.RegistryException</prop>
                <prop key="stop*">PROPAGATION_REQUIRED,-org.apache.jetspeed.components.portletregistry.RegistryException</prop>
                <prop key="unregister*">PROPAGATION_REQUIRED,-org.apache.jetspeed.components.portletregistry.RegistryException</prop>
                <prop key="register*">PROPAGATION_REQUIRED,-org.apache.jetspeed.components.portletregistry.RegistryException</prop>
                <prop key="save*">PROPAGATION_REQUIRED,-org.apache.jetspeed.components.portletregistry.RegistryException</prop>
            </props>
        </property>
    </bean>

  <!-- Inject PAM Proxy into PAM implementation -->
  <bean id="injectPAMProxyIntoPAM" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <meta key="j2:cat" value="default" />
    <property name="targetObject">
      <ref bean="org.apache.jetspeed.tools.pamanager.PortletApplicationManager" />
    </property>
    <property name="targetMethod">
      <value>setPAMProxy</value>
    </property>
    <property name="arguments">
      <list>
        <ref bean="PAM" />
      </list>
    </property>
  </bean>

  <!-- Portlet Application and Decorator deployment event listeners -->
  <bean id="portletAppDeploymentListener" class="org.apache.jetspeed.deployment.impl.DeployPortletAppEventListener" depends-on="injectPAMProxyIntoPAM">
    <meta key="j2:cat" value="default" />
    <constructor-arg index="0">
      <ref bean="PAM" />
    </constructor-arg>
    <constructor-arg index="1">
      <ref bean="org.apache.jetspeed.components.portletregistry.PortletRegistry" />
    </constructor-arg>
    <constructor-arg index="2">
      <value>${autodeployment.target.dir}</value>
    </constructor-arg>
    <constructor-arg index="3">
      <value>${autodeployment.apps.internal.path}</value>
    </constructor-arg>
    <constructor-arg index="4">
      <value>${autodeployment.apps.local.path}</value>
    </constructor-arg>
    <!-- strip commons-logging and/or log4j jars from war files: for JBoss set this to true -->
    <constructor-arg index="5">
      <value>false</value>
    </constructor-arg>
  </bean>
  <bean id="decoratorDeploymentRegistry"
    class="org.apache.jetspeed.deployment.simpleregistry.impl.InMemoryRegistryImpl">
    <meta key="j2:cat" value="default" />
  </bean>
  <bean id="decoratorDeploymentListener" class="org.apache.jetspeed.deployment.impl.DeployDecoratorEventListener" depends-on="injectPAMProxyIntoPAM">
    <meta key="j2:cat" value="default" />
    <constructor-arg>
      <value>${portal.core.decorations.path}</value>
    </constructor-arg>
  </bean>

  <!-- The deployment manager watches a specific staging directory for
    deploying components.  What components get deployed depend of
    DeploymentEventListeners registered to it.
  -->
  <bean id="deploymentManager" class="org.apache.jetspeed.deployment.impl.StandardDeploymentManager" init-method="start"
    destroy-method="stop">
    <meta key="j2:cat" value="default" />
    <constructor-arg>
      <value>${autodeployment.staging.dir},${autodeployment.staging.dir}/local</value>
    </constructor-arg>
    <constructor-arg type="long">
      <value>${autodeployment.delay}</value>
    </constructor-arg>
    <constructor-arg>
      <list>
        <ref bean="portletAppDeploymentListener" />
        <ref bean="decoratorDeploymentListener" />
      </list>
    </constructor-arg>
  </bean>

</beans>
